{
open DotParserProject.GraphData
open Option
open System.Collections.Generic
open QuickGraph

}

tokens {
    _ of string
}

options {   
    translate = true
    module = "DotParserProject.Gen.DotParser"
    infEpsPath = epsilons
    pos = uint64
}



module DotGrammar

[<Start>]
graph: g=graph_type [ ID ] LCURBRACE (stmt<<g>> [SEMI] { })* RCURBRACE { g.graph }

graph_type:
    s=[ STRICT ] d=( GRAPH {false} | DIGRAPH {true} ) { new GraphData (d, not <| isSome s)}

stmt<<(g: GraphData)>>: name=ID { g.AddNode name }